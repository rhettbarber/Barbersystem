<%= javascript_include_tag  :defaults %>
<%=  javascript_include_tag "scriptaculous" %>
<%= javascript_include_tag "bardata" %>
<%=  javascript_include_tag "builder" %>
<%=  javascript_include_tag "prototype" %>
<%=  javascript_include_tag "slider" %>




    
 <style type="text/css">
<!--
  
  img {/* border style for all images */
  border: 0;
  }
  
  img.b {/* replacement for <br /> after images */
  display: block; /* forces line break for content after */
  }

  img.b300300 {/* scalable em size class 468px/60px banners */
  width: 300px; /* replaces 100px width */
  height: 300px; /* replaces 100px height */
  }  
  img.t {/* top margin control */
  margin-top: 0.8em;
  }

#image_container {
	width:150px;
	float:left;
}

#admin_area {
	width:300px;
	height: 200px;
	background-color:yellow;
	border-color:red;
	border-width:1px;
	border-style:dotted;
	float:left;
}

-->

</style>


<div id="image_container">




 <%=  link_to_remote(image_tag(@item.PictureName), :update => "subnav_cart",  :url => { :action => :append_to_cart })   %>

 <%= @item.ItemLookupCode   %> 
 <%= @item.Description   %>
 <%= @item.Price   %>---item_id
 <%= @item.id   %>


  <%  if admin? %>  
  <div id="admin_area">
-   Administration  -

<%= form_remote_tag( :url => { :controller => "barber_store",  :action => "update_Items", :id => @item.id.to_s},  :html =>{ }) %>		                                       
<p><%= text_field "items", "Description", "rows" => 30, :value=> @item.Description, :class => 'input_text_short', :onblur => remote_function(:url => { :controller => "barber_store", :action => "update_Items", :id => @item.id.to_s }, :with => 'Form.serialize(this.form)') %>Description:</p>
<p><%= text_field "items", "Price", "rows" => 30, :value=> @item.Price, :class => 'input_text_short', :onblur => remote_function(:url => { :controller => "barber_store", :action => "update_Items", :id => @item.id.to_s }, :with => 'Form.serialize(this.form)') %>Price:</p>
<%= end_form_tag %> 

<%  @department =  @item.department_id  %>


Category Selector::<%= select("item","category_id", Category.find(:all,:conditions => ["department_id = ?", @item.department_id  ] ).collect {|p| [ p.Name  , p.id ] }, { :include_blank => true },{ :onchange =>  remote_function(:url => {:action => 'update_item_category_select',:id => @item.id },  :with => 'Form.Element.serialize(this)')  }) %>



<div id="admin_status"></div>

</div>

	                                      
    <% end %>


</div>


